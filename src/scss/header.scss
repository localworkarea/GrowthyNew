.header {
  @include adaptiveValue("padding-top", 23, 10,0,1920,1440);
  @include adaptiveValue("padding-bottom", 23, 10,0,1920,1440);
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 10;
  &::after {
    content:'';
    position: absolute;
    z-index: -1;
    inset: 0;
    background-color: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
  }
  @media (min-width:em(1340.98)){
    &::before {
      content: "";
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: calc(100% - toRem(40));
      max-width: toRem(1800);
      height: toRem(1);
      background-color: rgba(0, 0, 0, 0.1);
    }
  }
  // .header__container
  &__container {
    display: flex;
    align-items: center;
    @include adaptiveValue("column-gap", 90, 60,2,1920,1440);
    @include adaptiveValue("column-gap", 60, 20,3,1439,768);
    @media (max-width: em(1340.98)){
        justify-content: space-between;
    }
  }
  // .header__logo
  &__logo {
    display: block;
    img {
      @include adaptiveValue("width", 129, 97,2,1920,1440);
      @include adaptiveValue("width", 97, 86,3,1439,360);
      height: auto;
    }
    @media (max-width: em(1340.40)){
      position: relative;
      z-index: 5;
    }
  }
  // .header__menu
  &__menu {
  }
}

.menu {
  display: flex;
  align-items: center;
  gap: toRem(20);
  justify-content: space-between;
  @media (min-width:em(1340.98)){
    width: 100%;
  }
  // .menu__body
  &__body {
    @media (max-width: em(1340.98)) {
			position: fixed;
			width: 100%;
			height: 100%;
			left: -100%;
			top: 0;
			overflow: auto;
			padding: toRem(90) toRem(20) toRem(20);
			transition: left 0.5s ease-in-out;
      background-color: white;
      
			.menu-open & {
				left: 0;
			}
		}
    @media (max-width:$mobile){
       display: flex;
       flex-direction: column; 
       justify-content: space-between;
       row-gap: toRem(30);
    }
    @media (max-width:$mobileSmall){
      transition: left 0.3s ease-in-out;
      padding: toRem(70) toRem(20) toRem(20);
    }
  }
  // .menu__list
  &__list {
    display: flex;
    flex-wrap: wrap;
    @include adaptiveValue("column-gap", 30, 20,0,1920,1440);
    @media (min-width:em(1340.98)){
      row-gap: toRem(5);
      align-items: center;
    }
    @media (max-width: em(1340.98)){
        row-gap: toRem(20);
        flex-direction: column;
    }
  }
  // .menu__item
  &__item {
  }
  // .menu__link
  &__link {
    font-weight: 500;
    line-height: 1.2; 
    transition: color .3s ease;
    &:hover{
      color: $blue;
      span {
        &::before {
          background-color: $blue;
        }
      }
    }
    @media (min-width:em(1340.98)){
      font-size: toRem(16);
    }
    @media (max-width: em(1340.98)){
        font-size: toRem(28);
    }
    @media (max-width:$mobileSmall){
       font-size: toRem(20); 
    }
  }
  // .menu__sub-menu
  &__sub-menu {
    position: relative;
   
    &:hover {
      .sub-menu {
        opacity: 1;
        pointer-events: all;
        @media (max-width: em(1340.98)){
          height: 100%;
          transition: all .3s ease;
          // margin: initial;
          // padding: initial;
        }
      }
      .sub-menu__list {
        &::before {
          width: 100%;
          height: 100%;
          opacity: 1;
        }
      }
      .sub-menu__link {
        opacity: 1;
      }
      .menu__sub-link {
        svg {
          transform: rotate(-180deg);
          path {
            stroke: $blue;
          }
        }
      }
    }
  }
	// .menu__sub-link
	&__sub-link {
    // display: flex;
    // align-items: center;
    // cursor: pointer;
    //  svg {
    //   @media (min-width:em(1340.98)){
    //      display: none; 
    //   }
    //   @media (max-width: em(1340.98)){
    //       width: toRem(30);
    //       transition: all .3s ease;
    //   }
    //   path {
    //     stroke: $mainColor;
    //     transition: all .3s ease;
    //   }
    // }
	}
  // .menu__block
  &__block {
    display: flex;
    align-items: center;
  }
  // .menu__lang
  &__lang {
    border-radius: toRem(14);
    background-color: $gray;
    transition: background-color .3s ease, color .3s ease;
    &:not(:last-child) {
      @include adaptiveValue("margin-right", 55, 20,2,1920,1440);
      @include adaptiveValue("margin-right", 20, 10,3,1439,360);
    }
    &:hover {
      background-color: #000;
      color: white;
    }
    @media (min-width:$mobileSmall){
      padding: toRem(14) toRem(20);
    }
    @media (max-width: em(1340.40)){
      position: relative;
      z-index: 5;
    }
    @media (max-width:$mobileSmall){
      padding: toRem(10) toRem(15);
      font-size: toRem(14);
    }
  }
  // .menu__phone
  &__phone {
    white-space: nowrap;
    display: flex;
    align-items: center;
    gap: toRem(10);
    transition: color .3s ease;
    &:not(:last-child) {
      @include adaptiveValue("margin-right", 20, 10,0,1440,360);
    }
    &::before {
      content: url(@img/icons/phone.svg);
    }
    &:hover {
      color: $blue;
    }
    span {
      @media (max-width: em(1650.98)){
          display: none;
      }
    }
    @media (max-width: em(1340.40)){
      position: relative;
      z-index: 5;
    }
  }
  // .menu__btn
  &__btn {
    @media (min-width:em(1440.98)){
      height: toRem(59);
      min-width: toRem(284);
    }
    
    @media (max-width: em(1340.98)){
      position: relative;
      z-index: 5;
    }
    @media (min-width:$mobile){
      text-wrap: nowrap;
    }
    &:not(:last-child) {
      @include adaptiveValue("margin-right", 20, 10,3,1340,360);
    }
  }
  // .menu__icon
  &__icon {
  }
}

.sub-menu {
  padding-top: toRem(16);
  @media (min-width:em(1340.98)){
    pointer-events: none;
    opacity: 0;
    position: absolute;
    top: 15px;
    left: toRem(-20);
    transition: opacity .3s ease;
  }
  @media (max-width: em(1340.98)){
      position: relative;
      max-width: toRem(450);
      left: 0;
      // height: 0;
      transition: all .3s ease;
  }
  // .sub-menu__list
  &__list {
    padding: toRem(20);
    position: relative;
    transition: all .3s ease;
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      border-radius: toRem(20);
      background-color: #FFF;
      box-shadow: 0px 5px 30px 0px #D4E5F0;
      @media (min-width:em(1340.98)){
        width: 0;
        height: 0;
        transition: all .5s ease;
        opacity: 0;
      }
      @media (max-width: em(1340.98)){
          opacity: 1;
          width: 100%;
          height: 100%;
      }
    }
  }
  // .sub-menu__item
  &__item {
    &:not(:last-child) {
      @media (min-width:$mobileSmall){
        margin-bottom: toRem(10);
      }
      @media (max-width:$mobileSmall){
         margin-bottom: toRem(20); 
      }
    }
    position: relative;
    z-index: 2;
  }
  // .sub-menu__link
  &__link {
    font-size: toRem(16);
    font-weight: 500;
    @media (min-width:em(1340.98)){
      transition: opacity .45s ease .25s;
      opacity: 0;
    }
    @media (max-width: em(1340.98)){
      opacity: 1;
    }
  }
}


//Burger Icon
.icon-menu {
	display: none;
	@media (max-width: em(1340.98)) {
    flex: 0 0 auto;
		display: block;
		position: relative;
		width: toRem(30);
		height: toRem(15);
		z-index: 5;
		@media (any-hover: none) {
			cursor: default;
		}
		span,
		&::before,
		&::after {
			content: "";
			transition: all 0.3s ease 0s;
			right: 0;
			position: absolute;
			width: 100%;
			height: toRem(2);
      border-radius: 4px;
			background-color: #000;
		}
		&::before {
			top: 0;
		}
		&::after {
			bottom: 0;
		}
		span {
      width: 50%;
			top: calc(50% - toRem(1));
		}
		.menu-open & {
			span {
				width: 0;
			}
			&::before,
			&::after {
			}
			&::before {
				top: calc(50% - toRem(1));
				transform: rotate(-45deg);
			}
			&::after {
				bottom: calc(50% - toRem(1));
				transform: rotate(45deg);
			}
		}
	}
  @media (max-width:$mobileSmall){
     width: toRem(20);
     height: toRem(19); 
    span,
		&::before,
		&::after {
      height: toRem(3);
    }
    span {
			top: calc(50% - toRem(1.5));
		}
    .menu-open & {
      &::before {
        top: calc(50% - toRem(1.5));
      }
      &::after {
        bottom: calc(50% - toRem(1.5));
      }
    }
  }

}
